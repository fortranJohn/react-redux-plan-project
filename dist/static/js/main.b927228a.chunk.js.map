{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/layouts/SignedInLink.js","store/actions/authActions.js","components/layouts/SignedOutLink.js","components/layouts/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","config/firebase_conf.js","index.js"],"names":["initialState","authError","authReducer","state","action","type","console","log","err","message","projects","id","title","content","rootReducer","combineReducers","auth","project","firebase","firebaseReducer","firestore","firestoreReducer","connect","dispatch","signOut","getState","getFirebase","then","props","className","to","onClick","profile","initials","SignedOutLink","links","uid","style","display","verticalAlign","isLoaded","Notification","notifications","map","item","key","user","moment","time","toDate","fromNow","ProjectSummary","authorFirstName","authorLastName","createdAt","calendar","ProjectList","Dashboard","this","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleSignInChange","setState","target","value","onSubmit","htmlFor","onChange","placeholder","creds","credentials","signInWithEmailAndPassword","catch","SignUp","firstname","lastname","signUp","handleSignUpChange","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","handleChange","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","firebase_conf","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b927228a.chunk.js","sourcesContent":["const initialState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\",\r\n      };\r\n\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"Signout Success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"User Has been signed up successfully\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const initialState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"help me cook\",\r\n      content: \"give me a very nice African dish\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Design the front page \",\r\n      content:\r\n        \"create a very nice looking landing page for the ecommerce website\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Walk the old man\",\r\n      content:\r\n        \"Lets do some exercise today and give the lads some nrun for their money\",\r\n    },\r\n  ],\r\n};\r\nexport const projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created Project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Created Project error\", action.err);\r\n\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { projectReducer } from \"./projectReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLink = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create-project\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\n//SIgning Out\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\n//Sign UP\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirebase().firestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstname: newUser.firstname,\r\n            lastname: newUser.lastname,\r\n            initials: `${newUser.firstname[0]}${newUser.lastname[0]}`,\r\n          })\r\n          .then(() => {\r\n            dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n          })\r\n          .catch((err) => {\r\n            dispatch({\r\n              type: \"SIGNUP_ERROR\",\r\n              err,\r\n            });\r\n          });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const SignedOutLink = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLink from \"./SignedInLink\";\r\nimport { SignedOutLink } from \"./SignedOutLink\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLink profile={profile}/> : <SignedOutLink />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <div style={{ display: \"flex\", verticalAlign: \"center\" }}>\r\n          <Link to=\"/\" className=\"brand-logo left \">\r\n            TopHub\r\n          </Link>\r\n        </div>\r\n        {auth.isLoaded && links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const Notification = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user}</span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nexport const ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>{project.content}</p>\r\n        <p className=\"grey-text\">\r\n          Posted By {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ProjectSummary } from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n     {\r\n        projects && projects.map(project=>{\r\n            return (\r\n              <Link to={\"/projects/\" + project.id} key={project.id}>\r\n                <ProjectSummary project={project} />\r\n              </Link>\r\n            );\r\n         })\r\n     }\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Notification } from \"./Notification\";\r\nimport { ProjectList } from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notification notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  //   console.log(state);\r\n\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  // console.log(props);\r\n  const { project, auth } = props;\r\n  // const id = props.match.params.id;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title project-title\">{project.title} </span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              posted by{\" \"}\r\n              {`${project.authorFirstName}  \r\n              ${project.authorLastName}`}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  handleSignInChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n    //   console.log(e)\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3 form-title\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={this.handleSignInChange}\r\n              placeholder=\"Enter Email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleSignInChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // console.log(state);\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  };\r\n  handleSignUpChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n    //   console.log(e)\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3 form-title\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={this.handleSignUpChange}\r\n              placeholder=\"Enter Email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleSignUpChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstname\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstname\"\r\n              onChange={this.handleSignUpChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastname\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastname\"\r\n              onChange={this.handleSignUpChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n    //   console.log(e)\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3 form-title\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">\r\n              Create Project\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //Async call to DB\r\n    const firestore = getFirebase().firestore(); \r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstname,\r\n        authorLastName: profile.lastname,\r\n        authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar  from \"./components/layouts/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails  from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create-project\" component={CreateProject} />\n          <Route path=\"/projects/:id\" component={ProjectDetails} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Your web app's Firebase configuration\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAH90KgvtrdjIHL0WWxw_FXm9NUI_qpEdw\",\r\n  authDomain: \"topplan-5e384.firebaseapp.com\",\r\n  databaseURL: \"https://topplan-5e384.firebaseio.com\",\r\n  projectId: \"topplan-5e384\",\r\n  storageBucket: \"topplan-5e384.appspot.com\",\r\n  messagingSenderId: \"574557189202\",\r\n  appId: \"1:574557189202:web:9e9f70ddc24f1ddef89b8b\",\r\n  measurementId: \"G-H4D0BVPPYD\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase_conf from \"./config/firebase_conf\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase }))\n    // reduxFirestore(firebase),\n    // reactReduxFirebase(firebase, firebase_conf)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\nconst rrfProps = {\n  firebase,\n  config: { ...firebase_conf, ...profileSpecificProps },\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"center\">\n        <p>Loading TopPlan...</p>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}